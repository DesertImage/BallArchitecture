using System.Collections;using System.Collections.Generic;using DesertImage.Managers;using DesertImage.Pools;namespace DesertImage.Entities{    public class EntitiesManager : SystemBase, IAsyncAwake    {        private readonly List<IEntity> _entities = new List<IEntity>();        private readonly EntityPool _pool = new EntityPool();        public IEnumerator OnAsyncAwake()        {            var process = _pool.AsyncRegister(25);                        while (process.MoveNext())            {                yield return null;            }        }        public void Add(IEntity entity)        {            if (_entities.Contains(entity)) return;            _entities.Add(entity);        }        public IEntity GetEntity()        {            var newInstance = _pool.GetInstance();            _entities.Add(newInstance);            return newInstance;        }        public void ReturnSubject(IEntity instance)        {            _pool.ReturnInstance(instance);        }        public void Remove(IEntity entity)        {            _entities.Remove(entity);        }    }}